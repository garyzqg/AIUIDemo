plugins {
    id 'com.android.application'
}

android {

    compileSdk rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        applicationId "com.inspur.mspeech"
        minSdk rootProject.ext.android["minSdkVersion"]
        targetSdk rootProject.ext.android["targetSdkVersion"]
        versionCode 4
        versionName "2.0.2"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a'
        }

    }

//    signingConfigs {
//        config {
//            storeFile file('../inspiry.jks')
//            storePassword "123123"
//            keyAlias "inspiry"
//            keyPassword "123123"
//        }
//    }

    signingConfigs {
        config {
            storeFile file('../CONFIG/inspur.jks')
            storePassword "123123"
            keyAlias "inspur"
            keyPassword "123123"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    android.applicationVariants.all { variant ->
        //统一修改apk名称
        variant.outputs.all {

            outputFileName = "com.inspur.mspeech_v${variant.versionName}_${variant.buildType.name}_${new Date().format('MMdd_HHmm')}.apk"
        }
        // 打包完成之后，将apk复制到指定目录
        def outputFilePath = "${rootDir.absolutePath}/PRO_OUT_APK/${variant.flavorName}/${variant.buildType.name}"
        File outputFile = new File(outputFilePath)
        variant.getAssembleProvider().configure() {
            it.doLast {
                copy {
                    variant.outputs.all { file ->
                        copy {
                            from file.outputFile
                            into outputFile
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["appcompat-x"]
    implementation rootProject.ext.dependencies["material"]
    implementation rootProject.ext.dependencies["constraintlayout-x"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["test-junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso"]

    implementation rootProject.ext.dependencies["websocket"]

    implementation rootProject.ext.dependencies["gson"]

    implementation rootProject.ext.dependencies["recyclerview"]

    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["glide-compiler"]

    implementation 'org.jetbrains:annotations:15.0'
    implementation 'com.github.Jay-Goo:WaveLineView:v1.0.4'
    implementation 'com.hjq:xxpermissions:8.2'

    implementation project(path: ':net')
    implementation project(path: ':dialog')

    implementation files('libs/AIKit.aar')

    //视频播放组件
    implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer:v8.3.5-release-jitpack'

    //弹幕
//    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
//    implementation 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'

//    implementation 'com.jieWang:Muti-Barrage:1.0.8'

    implementation 'com.github.AlexLiuSheng:CheckVersionLib:2.4.1_androidx'


}